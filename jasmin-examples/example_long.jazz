param int cROUNDS = 2;
param int dROUNDS = 4;

inline
fn sipround(reg u64[4] v) -> reg u64[4] {
  v[0] += v[1];
  return v;
}

export
fn siphash_jazz(
  reg u64 in, reg u64 inlen,
  reg u64 kptr,
  reg u64 out, reg u64 outlen
) /*-> reg u64*/ {
  while (in != end) {
    m = [in + 0 * 8];
    v[3] ^= m;
    for i = 0 to cROUNDS {
      v = sipround(v);
    }
    v[0] ^= m;
    in += 8;
  }

  for i = 0 to cROUNDS {
    v = sipround(v);
  }
}
